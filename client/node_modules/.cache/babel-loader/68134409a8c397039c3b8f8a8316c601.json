{"ast":null,"code":"var _jsxFileName = \"/home/danya/Documents/fibTestTask/client/src/components/GetFibNum.js\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"@material-ui/core\";\nimport axios from \"axios\";\n\nfunction GetFibNum() {\n  const [res, getRes] = useState(0);\n  const [num, setNum] = useState(1);\n\n  const getNum = e => {\n    axios.get(\"/fib\", {\n      params: {\n        n: num\n      }\n    }).then(resp => getRes(resp.data));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    name: \"fib\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    min: \"1\",\n    max: \"100\",\n    placeholder: num,\n    onChange: e => e.currentTarget.value <= 100 && e.currentTarget.value >= 1 ? setNum(e.currentTarget.value) : setNum(100),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }), \" \", /*#__PURE__*/React.createElement(Button, {\n    onClick: getNum,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"get\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"here is num - \", res), /*#__PURE__*/React.createElement(Link, {\n    to: \"/history\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \" history \"));\n}\n\nexport default GetFibNum;","map":{"version":3,"sources":["/home/danya/Documents/fibTestTask/client/src/components/GetFibNum.js"],"names":["React","useState","Link","Button","axios","GetFibNum","res","getRes","num","setNum","getNum","e","get","params","n","then","resp","data","currentTarget","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,MAAR,QAAqB,mBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,SAAT,GAAqB;AACnB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBN,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,CAAD,CAA9B;;AACA,QAAMS,MAAM,GAAGC,CAAC,IAAI;AAClBP,IAAAA,KAAK,CACFQ,GADH,CACO,MADP,EACe;AACXC,MAAAA,MAAM,EAAE;AACNC,QAAAA,CAAC,EAAEN;AADG;AADG,KADf,EAMGO,IANH,CAMQC,IAAI,IAAIT,MAAM,CAACS,IAAI,CAACC,IAAN,CANtB;AAOD,GARD;;AASA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,IAAI,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,GAAG,EAAC,GAFN;AAGE,IAAA,GAAG,EAAC,KAHN;AAIE,IAAA,WAAW,EAAET,GAJf;AAKE,IAAA,QAAQ,EAAEG,CAAC,IACTA,CAAC,CAACO,aAAF,CAAgBC,KAAhB,IAAyB,GAAzB,IAAgCR,CAAC,CAACO,aAAF,CAAgBC,KAAhB,IAAyB,CAAzD,GACIV,MAAM,CAACE,CAAC,CAACO,aAAF,CAAgBC,KAAjB,CADV,GAEIV,MAAM,CAAC,GAAD,CARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWK,GAXL,eAYE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAZF,CADF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAoBJ,GAApB,CAfF,eAgBE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAhBF,CADF;AAoBD;;AAED,eAAeD,SAAf","sourcesContent":["import React, {useState} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {Button} from \"@material-ui/core\";\nimport axios from \"axios\";\n\nfunction GetFibNum() {\n  const [res, getRes] = useState(0);\n  const [num, setNum] = useState(1);\n  const getNum = e => {\n    axios\n      .get(\"/fib\", {\n        params: {\n          n: num\n        }\n      })\n      .then(resp => getRes(resp.data));\n  };\n  return (\n    <React.Fragment>\n      <form name=\"fib\">\n        <input\n          type=\"number\"\n          min=\"1\"\n          max=\"100\"\n          placeholder={num}\n          onChange={e =>\n            e.currentTarget.value <= 100 && e.currentTarget.value >= 1\n              ? setNum(e.currentTarget.value)\n              : setNum(100)\n          }\n        />{\" \"}\n        <Button onClick={getNum}>get</Button>\n      </form>\n      <div>here is num - {res}</div>\n      <Link to=\"/history\"> history </Link>\n    </React.Fragment>\n  );\n}\n\nexport default GetFibNum;\n"]},"metadata":{},"sourceType":"module"}